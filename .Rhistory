test$Title[grep("Mr.", test$Name, fixed = TRUE)] <- "Mr."
test$Title[grep("Mrs.", test$Name, fixed = TRUE)] <- "Mrs."
test$Title[grep("Rev.", test$Name, fixed = TRUE)] <- "Rev."
test$Title[grep("Don.", test$Name, fixed = TRUE)] <- "Don."
test$Title[grep("Dr.", test$Name, fixed = TRUE)] <- "Dr."
test$Title[grep("Major.", test$Name, fixed = TRUE)] <- "Major."
test$Title[grep("Jonkheer", test$Name, fixed = TRUE)] <- "Jonkheer"
test$Title[grep("Col.", test$Name, fixed = TRUE)] <- "Col."
test$Title[grep("Mme..", test$Name, fixed = TRUE)] <- "Mme."
test$Title[grep("Ms.", test$Name, fixed = TRUE)] <- "Ms."
test$Title[grep("Lady.", test$Name, fixed = TRUE)] <- "Lady."
test$Title[grep("Sir.", test$Name, fixed = TRUE)] <- "Sir.."
test$Title[grep("Mlle.", test$Name, fixed = TRUE)] <- "Mlle."
test$Title[grep("Capt.", test$Name, fixed = TRUE)] <- "Capt."
test$Title[grep("the Countess.", test$Name, fixed = TRUE)] <- "the Countess."
test$Title[grep("Dona.", test$Name, fixed = TRUE)] <- "Dona."
test[test$Title == "Dona.",]
test[test$Title == "Mme.",]
train[test$Title == "Mme.",]
train[train$Title == "Mme.",]
train[train$Ticket == "PC 17758"]
train[train$Ticket == "PC 17758",]
test[test$Title == "Dona.",]
train <- read.csv("train.csv")
test <- read.csv("test.csv")
train$Survived <- as.factor(train$Survived)
train$Pclass <- as.factor(train$Pclass)
train$Embarked <- as.character(train$Embarked)
test$Pclass <- as.factor(test$Pclass)
test$Embarked <- as.character(test$Embarked)
train$Title <- NA
test$Title <- NA
train$Title[grep("Master.", train$Name, fixed = TRUE)] <- "Master."
train$Title[grep("Miss", train$Name, fixed = TRUE)] <- "Miss."
train$Title[grep("Mr.", train$Name, fixed = TRUE)] <- "Mr."
train$Title[grep("Mrs.", train$Name, fixed = TRUE)] <- "Mrs."
train$Title[grep("Rev.", train$Name, fixed = TRUE)] <- "Rev."
train$Title[grep("Don.", train$Name, fixed = TRUE)] <- "Don."
train$Title[grep("Dr.", train$Name, fixed = TRUE)] <- "Dr."
train$Title[grep("Major.", train$Name, fixed = TRUE)] <- "Major."
train$Title[grep("Jonkheer", train$Name, fixed = TRUE)] <- "Jonkheer"
train$Title[grep("Col.", train$Name, fixed = TRUE)] <- "Col."
train$Title[grep("Mme.", train$Name, fixed = TRUE)] <- "Mme."
train$Title[grep("Ms.", train$Name, fixed = TRUE)] <- "Ms."
train$Title[grep("Lady.", train$Name, fixed = TRUE)] <- "Lady."
train$Title[grep("Sir.", train$Name, fixed = TRUE)] <- "Sir.."
train$Title[grep("Mlle.", train$Name, fixed = TRUE)] <- "Mlle."
train$Title[grep("Capt.", train$Name, fixed = TRUE)] <- "Capt."
train$Title[grep("the Countess.", train$Name, fixed = TRUE)] <- "the Countess."
train$Title[grep("Dona.", train$Name, fixed = TRUE)] <- "Dona."
test$Title[grep("Master.", test$Name, fixed = TRUE)] <- "Master."
test$Title[grep("Miss", test$Name, fixed = TRUE)] <- "Miss."
test$Title[grep("Mr.", test$Name, fixed = TRUE)] <- "Mr."
test$Title[grep("Mrs.", test$Name, fixed = TRUE)] <- "Mrs."
test$Title[grep("Rev.", test$Name, fixed = TRUE)] <- "Rev."
test$Title[grep("Don.", test$Name, fixed = TRUE)] <- "Don."
test$Title[grep("Dr.", test$Name, fixed = TRUE)] <- "Dr."
test$Title[grep("Major.", test$Name, fixed = TRUE)] <- "Major."
test$Title[grep("Jonkheer", test$Name, fixed = TRUE)] <- "Jonkheer"
test$Title[grep("Col.", test$Name, fixed = TRUE)] <- "Col."
test$Title[grep("Mme..", test$Name, fixed = TRUE)] <- "Mme."
test$Title[grep("Ms.", test$Name, fixed = TRUE)] <- "Ms."
test$Title[grep("Lady.", test$Name, fixed = TRUE)] <- "Lady."
test$Title[grep("Sir.", test$Name, fixed = TRUE)] <- "Sir.."
test$Title[grep("Mlle.", test$Name, fixed = TRUE)] <- "Mlle."
test$Title[grep("Capt.", test$Name, fixed = TRUE)] <- "Capt."
test$Title[grep("the Countess.", test$Name, fixed = TRUE)] <- "the Countess."
test$Title[grep("Dona.", test$Name, fixed = TRUE)] <- "Miss."
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
summary(train)
summary(test)
which(is.na(test$Fare))
test[153,]
train[train$Ticket == "3701", ]
test[test$Ticket == "3701", ]
train[train$Pclass == 3,]
train[train$Pclass == 3, c("Fare") ]
test[153,]
train[train$Pclass == 3 and train$Title == "Mr.", c("Fare") ]
train[(train$Pclass == 3 and train$Title == "Mr."), c("Fare") ]
train[train$Pclass == 3 || train$Title == "Mr.", c("Fare") ]
test[153,]
train[train$Pclass == 3 || train$Title == "Mr." || train$Embarked == "S", c("Fare") ]
test[153,]
View(train)
View(train)
test[150:158,]
train[train$Pclass == 3 || train$Title == "Mr." || train$Embarked == "S", c("Fare") ]
train[694,]
train[train$Pclass == 3 || train$Title == "Mr." || train$Embarked == "S", c("Fare", "Embarked") ]
View(train)
test[153, "Embarked"]
class(test[153, "Embarked"])
table(train$Embarked)
test[153, "Embarked"]
train[train$Pclass == 3 || train$Title == "Mr." || train$Embarked == test[153, "Embarked"], c("Fare", "Embarked") ]
train[train$Pclass == 3 || train$Title == "Mr." || train$Embarked == "", c("Fare", "Embarked") ]
train[train$Pclass == 3 || train$Title == "Mr." || train$Embarked == 1, c("Fare", "Embarked") ]
train[train$Pclass == 3 & train$Title == "Mr." & train$Embarked == "S", c("Fare", "Embarked") ]
train[train$Pclass == 3 & train$Title == "Mr." & train$Embarked == "S",  ]
train[train$Pclass == 3 & train$Title == "Mr." & train$Embarked == "S", -4 ]
train[train$Pclass == 3 & train$Title == "Mr." & train$Embarked == "S", -c(4,5,11,12) ]
train[train$Pclass == 3 & train$Title == "Mr." & train$Embarked == "S" & train$SibSp == 0, -c(4,5,11,12) ]
train[train$Pclass == 3 & train$Title == "Mr." & train$Embarked == "S" & train$SibSp == 0 $ Train$Age > 40, -c(4,5,11,12) ]
train[train$Pclass == 3 & train$Title == "Mr." & train$Embarked == "S" & train$SibSp == 0 $ Train$Age >= 40, -c(4,5,11,12) ]
train[train$Pclass == 3 & train$Title == "Mr." & train$Embarked == "S" & train$SibSp == 0 & Train$Age >= 40, -c(4,5,11,12) ]
train[train$Pclass == 3 & train$Title == "Mr." & train$Embarked == "S" & train$SibSp == 0 & train$Age >= 40, -c(4,5,11,12) ]
train[train$Pclass == 3 & train$Title == "Mr." & train$Embarked == "S" & train$SibSp == 0 & train$Age > 40, -c(4,5,11,12) ]
train[train$Pclass == 3 & train$Title == "Mr." & train$Embarked == "S" & train$SibSp == 0, -c(4,5,11,12) ]
train[train$Pclass == 3 & train$Title == "Mr." & train$Embarked == "S" & train$Age > 40, -c(4,5,11,12) ]
train[train$Pclass == 3 & train$Title == "Mr." & train$Embarked == "S", -c(4,5,11,12) ]
test[153,]
test[153, "Fare"]
test[153, "Fare"] <- 8
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
summary(train)
summary(test)
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + Fare + Title,
data = Titanictrain, nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
acc
tabla
PredTest <- predict(TitanicRF, newdata=test, type="response")
MySubmission <- data.frame(PassengerID = test$PassengerId, Survived = PredTest)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
train$Survived <- as.factor(train$Survived)
train$Pclass <- as.factor(train$Pclass)
train$Embarked <- as.character(train$Embarked)
test$Pclass <- as.factor(test$Pclass)
test$Embarked <- as.character(test$Embarked)
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + Fare, data = Titanictrain,
nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
cat("ntree=",i," acc=",acc,"\n")
acc
tabla
train$Title <- NA
test$Title <- NA
train$Title[grep("Master.", train$Name, fixed = TRUE)] <- "Master."
train$Title[grep("Miss", train$Name, fixed = TRUE)] <- "Miss."
train$Title[grep("Mr.", train$Name, fixed = TRUE)] <- "Mr."
train$Title[grep("Mrs.", train$Name, fixed = TRUE)] <- "Mrs."
train$Title[grep("Rev.", train$Name, fixed = TRUE)] <- "Rev."
train$Title[grep("Don.", train$Name, fixed = TRUE)] <- "Don."
train$Title[grep("Dr.", train$Name, fixed = TRUE)] <- "Dr."
train$Title[grep("Major.", train$Name, fixed = TRUE)] <- "Major."
train$Title[grep("Jonkheer", train$Name, fixed = TRUE)] <- "Jonkheer"
train$Title[grep("Col.", train$Name, fixed = TRUE)] <- "Col."
train$Title[grep("Mme.", train$Name, fixed = TRUE)] <- "Mme."
train$Title[grep("Ms.", train$Name, fixed = TRUE)] <- "Ms."
train$Title[grep("Lady.", train$Name, fixed = TRUE)] <- "Lady."
train$Title[grep("Sir.", train$Name, fixed = TRUE)] <- "Sir.."
train$Title[grep("Mlle.", train$Name, fixed = TRUE)] <- "Mlle."
train$Title[grep("Capt.", train$Name, fixed = TRUE)] <- "Capt."
train$Title[grep("the Countess.", train$Name, fixed = TRUE)] <- "the Countess."
train$Title[grep("Dona.", train$Name, fixed = TRUE)] <- "Dona."
test$Title[grep("Master.", test$Name, fixed = TRUE)] <- "Master."
test$Title[grep("Miss", test$Name, fixed = TRUE)] <- "Miss."
test$Title[grep("Mr.", test$Name, fixed = TRUE)] <- "Mr."
test$Title[grep("Mrs.", test$Name, fixed = TRUE)] <- "Mrs."
test$Title[grep("Rev.", test$Name, fixed = TRUE)] <- "Rev."
test$Title[grep("Don.", test$Name, fixed = TRUE)] <- "Don."
test$Title[grep("Dr.", test$Name, fixed = TRUE)] <- "Dr."
test$Title[grep("Major.", test$Name, fixed = TRUE)] <- "Major."
test$Title[grep("Jonkheer", test$Name, fixed = TRUE)] <- "Jonkheer"
test$Title[grep("Col.", test$Name, fixed = TRUE)] <- "Col."
test$Title[grep("Mme..", test$Name, fixed = TRUE)] <- "Mme."
test$Title[grep("Ms.", test$Name, fixed = TRUE)] <- "Ms."
test$Title[grep("Lady.", test$Name, fixed = TRUE)] <- "Lady."
test$Title[grep("Sir.", test$Name, fixed = TRUE)] <- "Sir.."
test$Title[grep("Mlle.", test$Name, fixed = TRUE)] <- "Mlle."
test$Title[grep("Capt.", test$Name, fixed = TRUE)] <- "Capt."
test$Title[grep("the Countess.", test$Name, fixed = TRUE)] <- "the Countess."
# Dona is in spanich. We need to chenge to Miss.
test$Title[grep("Dona.", test$Name, fixed = TRUE)] <- "Miss."
# Observations with no FARE
test[153, "Fare"] <- 8
summary(train)
summary(test)
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + Fare + Title,
data = Titanictrain, nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + Fare,
data = Titanictrain, nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
acc
tabla
TitanicRF <- randomForest(Survived ~ Pclass + Sex + Fare + Title,
data = Titanictrain, nodesize = 50, ntree = 2444)
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + Fare + Title,
data = Titanictrain, nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
acc
tabla
PredTest <- predict(TitanicRF, newdata=test, type="response")
str(train)
str(test)
table(train$Title)
table(test$Title)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
train$Survived <- as.factor(train$Survived)
train$Pclass <- as.factor(train$Pclass)
train$Embarked <- as.factor(train$Embarked)
test$Pclass <- as.factor(test$Pclass)
test$Embarked <- as.factor(test$Embarked)
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + Fare, data = Titanictrain,
nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
acc
tabla
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + Fare + Embarked, data = Titanictrain,
nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
acc
tabla
train$Title <- NA
test$Title <- NA
train$Title[grep("Master.", train$Name, fixed = TRUE)] <- "Master."
train$Title[grep("Miss", train$Name, fixed = TRUE)] <- "Miss."
train$Title[grep("Mr.", train$Name, fixed = TRUE)] <- "Mr."
train$Title[grep("Mrs.", train$Name, fixed = TRUE)] <- "Mrs."
train$Title[grep("Rev.", train$Name, fixed = TRUE)] <- "Rev."
train$Title[grep("Don.", train$Name, fixed = TRUE)] <- "Don."
train$Title[grep("Dr.", train$Name, fixed = TRUE)] <- "Dr."
train$Title[grep("Major.", train$Name, fixed = TRUE)] <- "Major."
train$Title[grep("Jonkheer", train$Name, fixed = TRUE)] <- "Jonkheer"
train$Title[grep("Col.", train$Name, fixed = TRUE)] <- "Col."
train$Title[grep("Mme.", train$Name, fixed = TRUE)] <- "Mme."
train$Title[grep("Ms.", train$Name, fixed = TRUE)] <- "Ms."
train$Title[grep("Lady.", train$Name, fixed = TRUE)] <- "Lady."
train$Title[grep("Sir.", train$Name, fixed = TRUE)] <- "Sir."
train$Title[grep("Mlle.", train$Name, fixed = TRUE)] <- "Mlle."
train$Title[grep("Capt.", train$Name, fixed = TRUE)] <- "Capt."
train$Title[grep("the Countess.", train$Name, fixed = TRUE)] <- "the Countess."
train$Title[grep("Dona.", train$Name, fixed = TRUE)] <- "Dona."
test$Title[grep("Master.", test$Name, fixed = TRUE)] <- "Master."
test$Title[grep("Miss", test$Name, fixed = TRUE)] <- "Miss."
test$Title[grep("Mr.", test$Name, fixed = TRUE)] <- "Mr."
test$Title[grep("Mrs.", test$Name, fixed = TRUE)] <- "Mrs."
test$Title[grep("Rev.", test$Name, fixed = TRUE)] <- "Rev."
test$Title[grep("Don.", test$Name, fixed = TRUE)] <- "Don."
test$Title[grep("Dr.", test$Name, fixed = TRUE)] <- "Dr."
test$Title[grep("Major.", test$Name, fixed = TRUE)] <- "Major."
test$Title[grep("Jonkheer", test$Name, fixed = TRUE)] <- "Jonkheer"
test$Title[grep("Col.", test$Name, fixed = TRUE)] <- "Col."
test$Title[grep("Mme..", test$Name, fixed = TRUE)] <- "Mme."
test$Title[grep("Ms.", test$Name, fixed = TRUE)] <- "Ms."
test$Title[grep("Lady.", test$Name, fixed = TRUE)] <- "Lady."
test$Title[grep("Sir.", test$Name, fixed = TRUE)] <- "Sir."
test$Title[grep("Mlle.", test$Name, fixed = TRUE)] <- "Mlle."
test$Title[grep("Capt.", test$Name, fixed = TRUE)] <- "Capt."
test$Title[grep("the Countess.", test$Name, fixed = TRUE)] <- "the Countess."
# Dona is in spanich. We need to chenge to Miss.
test$Title[grep("Dona.", test$Name, fixed = TRUE)] <- "Miss."
# Observations with no FARE
test[153, "Fare"] <- 8
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + Fare + Title,
data = Titanictrain, nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
acc
tabla
PredTest <- predict(TitanicRF, newdata=test, type="response")
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + Fare,
data = Titanictrain, nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
acc
tabla
PredTest <- predict(TitanicRF, newdata=test, type="response")
MySubmission <- data.frame(PassengerID = test$PassengerId, Survived = PredTest)
write.csv(MySubmission, "Submission.csv", row.names=FALSE)
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + Fare + Title,
data = Titanictrain, nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
acc
tabla
summary(train)
summary(test)
str(train)
str(test)
table(train$Title)
table(test$Title)
test$Title
train$Title
train <- read.csv("train.csv")
test <- read.csv("test.csv")
train$Survived <- as.factor(train$Survived)
train$Pclass <- as.factor(train$Pclass)
train$Embarked <- as.factor(train$Embarked)
test$Pclass <- as.factor(test$Pclass)
test$Embarked <- as.factor(test$Embarked)
train$Title <- NA
test$Title <- NA
train$Title[grep("Master.", train$Name, fixed = TRUE)] <- "Master."
train$Title[grep("Miss", train$Name, fixed = TRUE)] <- "Miss"
train$Title[grep("Mr.", train$Name, fixed = TRUE)] <- "Mr."
train$Title[grep("Mrs.", train$Name, fixed = TRUE)] <- "Mrs."
train$Title[grep("Rev.", train$Name, fixed = TRUE)] <- "Rev."
train$Title[grep("Don.", train$Name, fixed = TRUE)] <- "Don."
train$Title[grep("Dr.", train$Name, fixed = TRUE)] <- "Dr."
train$Title[grep("Major.", train$Name, fixed = TRUE)] <- "Major."
train$Title[grep("Jonkheer", train$Name, fixed = TRUE)] <- "Jonkheer"
train$Title[grep("Col.", train$Name, fixed = TRUE)] <- "Col."
train$Title[grep("Mme.", train$Name, fixed = TRUE)] <- "Mme."
train$Title[grep("Ms.", train$Name, fixed = TRUE)] <- "Ms."
train$Title[grep("Lady.", train$Name, fixed = TRUE)] <- "Lady."
train$Title[grep("Sir.", train$Name, fixed = TRUE)] <- "Sir."
train$Title[grep("Mlle.", train$Name, fixed = TRUE)] <- "Miss"
train$Title[grep("Capt.", train$Name, fixed = TRUE)] <- "Capt."
train$Title[grep("the Countess.", train$Name, fixed = TRUE)] <- "Miss"
train$Title[grep("Dona.", train$Name, fixed = TRUE)] <- "Miss"
test$Title[grep("Master.", test$Name, fixed = TRUE)] <- "Master."
test$Title[grep("Miss", test$Name, fixed = TRUE)] <- "Miss"
test$Title[grep("Mr.", test$Name, fixed = TRUE)] <- "Mr."
test$Title[grep("Mrs.", test$Name, fixed = TRUE)] <- "Mrs."
test$Title[grep("Rev.", test$Name, fixed = TRUE)] <- "Rev."
test$Title[grep("Don.", test$Name, fixed = TRUE)] <- "Don."
test$Title[grep("Dr.", test$Name, fixed = TRUE)] <- "Dr."
test$Title[grep("Major.", test$Name, fixed = TRUE)] <- "Major."
test$Title[grep("Jonkheer", test$Name, fixed = TRUE)] <- "Jonkheer"
test$Title[grep("Col.", test$Name, fixed = TRUE)] <- "Col."
test$Title[grep("Mme.", test$Name, fixed = TRUE)] <- "Mme."
test$Title[grep("Ms.", test$Name, fixed = TRUE)] <- "Ms."
test$Title[grep("Lady.", test$Name, fixed = TRUE)] <- "Lady."
test$Title[grep("Sir.", test$Name, fixed = TRUE)] <- "Sir."
test$Title[grep("Mlle.", test$Name, fixed = TRUE)] <- "Miss"
test$Title[grep("Capt.", test$Name, fixed = TRUE)] <- "Capt."
test$Title[grep("the Countess.", test$Name, fixed = TRUE)] <- "Miss"
# Dona is in spanich. We need to chenge to Miss.
test$Title[grep("Dona.", test$Name, fixed = TRUE)] <- "Miss"
# Observations with no FARE
test[153, "Fare"] <- 8
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
summary(train)
summary(test)
str(train)
str(test)
table(train$Title)
table(test$Title)
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + Fare + Title,
data = Titanictrain, nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
acc
tabla
PredTest <- predict(TitanicRF, newdata=test, type="response")
levels(test$Title) <- levels(train$Title)
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + Fare + Title,
data = Titanictrain, nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
acc
tabla
PredTest <- predict(TitanicRF, newdata=test, type="response")
MySubmission <- data.frame(PassengerID = test$PassengerId, Survived = PredTest)
write.csv(MySubmission, "Submission.csv", row.names=FALSE)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
train$Survived <- as.factor(train$Survived)
train$Pclass <- as.factor(train$Pclass)
train$Embarked <- as.factor(train$Embarked)
test$Pclass <- as.factor(test$Pclass)
test$Embarked <- as.factor(test$Embarked)
train$Title <- NA
test$Title <- NA
train$Title[grep("Master.", train$Name, fixed = TRUE)] <- "Master."
train$Title[grep("Miss", train$Name, fixed = TRUE)] <- "Miss"
train$Title[grep("Mr.", train$Name, fixed = TRUE)] <- "Mr."
train$Title[grep("Mrs.", train$Name, fixed = TRUE)] <- "Mrs."
train$Title[grep("Rev.", train$Name, fixed = TRUE)] <- "Rev."
train$Title[grep("Don.", train$Name, fixed = TRUE)] <- "Don."
train$Title[grep("Dr.", train$Name, fixed = TRUE)] <- "Dr."
train$Title[grep("Major.", train$Name, fixed = TRUE)] <- "Major."
train$Title[grep("Jonkheer", train$Name, fixed = TRUE)] <- "Jonkheer"
train$Title[grep("Col.", train$Name, fixed = TRUE)] <- "Col."
train$Title[grep("Mme.", train$Name, fixed = TRUE)] <- "Mme."
train$Title[grep("Ms.", train$Name, fixed = TRUE)] <- "Ms."
train$Title[grep("Lady.", train$Name, fixed = TRUE)] <- "Lady."
train$Title[grep("Sir.", train$Name, fixed = TRUE)] <- "Sir."
train$Title[grep("Mlle.", train$Name, fixed = TRUE)] <- "Mlle."
train$Title[grep("Capt.", train$Name, fixed = TRUE)] <- "Capt."
train$Title[grep("the Countess.", train$Name, fixed = TRUE)] <- "the Countess"
train$Title[grep("Dona.", train$Name, fixed = TRUE)] <- "Miss"
test$Title[grep("Master.", test$Name, fixed = TRUE)] <- "Master."
test$Title[grep("Miss", test$Name, fixed = TRUE)] <- "Miss"
test$Title[grep("Mr.", test$Name, fixed = TRUE)] <- "Mr."
test$Title[grep("Mrs.", test$Name, fixed = TRUE)] <- "Mrs."
test$Title[grep("Rev.", test$Name, fixed = TRUE)] <- "Rev."
test$Title[grep("Don.", test$Name, fixed = TRUE)] <- "Don."
test$Title[grep("Dr.", test$Name, fixed = TRUE)] <- "Dr."
test$Title[grep("Major.", test$Name, fixed = TRUE)] <- "Major."
test$Title[grep("Jonkheer", test$Name, fixed = TRUE)] <- "Jonkheer"
test$Title[grep("Col.", test$Name, fixed = TRUE)] <- "Col."
test$Title[grep("Mme.", test$Name, fixed = TRUE)] <- "Mme."
test$Title[grep("Ms.", test$Name, fixed = TRUE)] <- "Ms."
test$Title[grep("Lady.", test$Name, fixed = TRUE)] <- "Lady."
test$Title[grep("Sir.", test$Name, fixed = TRUE)] <- "Sir."
test$Title[grep("Mlle.", test$Name, fixed = TRUE)] <- "Mlle."
test$Title[grep("Capt.", test$Name, fixed = TRUE)] <- "Capt."
test$Title[grep("the Countess.", test$Name, fixed = TRUE)] <- "the Countess"
# Dona is in spanich. We need to chenge to Miss.
test$Title[grep("Dona.", test$Name, fixed = TRUE)] <- "Miss"
# Observations with no FARE
test[153, "Fare"] <- 8
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
levels(test$Title) <- levels(train$Title)
str(train)
str(test)
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + Fare + Title,
data = Titanictrain, nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
acc
tabla
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + Fare + Title,
data = Titanictrain, nodesize = 100, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
acc
tabla
PredTest <- predict(TitanicRF, newdata=test, type="response")
MySubmission <- data.frame(PassengerID = test$PassengerId, Survived = PredTest)
write.csv(MySubmission, "Submission.csv", row.names=FALSE)
