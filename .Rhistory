acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
table(train$Survived, train$Sex)
str(train)
table(train$SibSp)
table(train$SibSp, train$Survived)
summary(TitanicRF)
table(train$Parch, train$Survived)
table(train$Age)
summary(train$Age)
train$Name
?grep
grep(Major, train$Name)
grep("Major", train$Name)
grep("Master", train$Name)
train$Title <- None
train$Title <- NA
train$Title[grep("Master", train$Name), "Title"] <- Master
train$Title[grep("Master", train$Name), "Title"] <- "Master"
vector <- grep("Master", train$Name)
vector
train$Title[vector, "Title"] <- "Master"
train$Title[c(vector), "Title"] <- "Master"
View(train)
str(vector)
train$Title[as.vector(vector), "Title"] <- "Master"
as.vector(vector)
c(2,3)
str(c(2,3))
train$Title[as.vector(vector), "Title"]
train$Title[8, "Title"]
train$Title[8]
train$Title[vector]
train$Title[vector] <- "Master"
View(train)
train$Title[grep("Miss", train$Name)]
train$Title[grep("Miss", train$Name)] <- "Miss"
View(train)
train$Title[grep("Mr", train$Name)]
train$Title[grep("Mr", train$Name)] <- "Mr"
train$Title[grep("Mrs.", train$Name)]
train$Title[grep("Mrs.", train$Name)]
train$Title[grep("Mr.", train$Name)] <- "Mr"
train$Title[grep("Mrs.", train$Name)]
train$Title[grep("Mrs", train$Name)]
train$Title[grep("Mrs.", train$Name)]
train$Title[grep("Master.", train$Name)] <- "Master."
train$Title <- NA
train$Title[grep("Master.", train$Name)] <- "Master."
train$Title[grep("Miss", train$Name)] <- "Miss."
train$Title[grep("Mr.", train$Name)] <- "Mr."
train$Title[grep("Mrs.", train$Name)] <- "Mrs."
View(train)
train$Title[grep("Rev.", train$Name)]
train$Title[grep("Rev.", train$Name)] <- "Rev."
summary(train$Title)
str(train$Title)
str(train)
summary(train)
View(train)
train$Title[grep("Don.", train$Name)] <- "Don."
train$Title[grep("Dr.", train$Name)] <- "Dr."
train$Title[grep("Major.", train$Name)] <- "Major"
View(train)
train$Title[grep("Jonkheer", train$Name)] <- "Jonkheer"
train$Title[grep("Col.", train$Name)] <- "Col."
test$Title[grep("Master.", test$Name)] <- "Master."
test$Title[grep("Miss", test$Name)] <- "Miss."
test$Title[grep("Mr.", test$Name)] <- "Mr."
test$Title[grep("Mrs.", test$Name)] <- "Mrs."
test$Title[grep("Rev.", test$Name)] <- "Rev."
test$Title[grep("Don.", test$Name)] <- "Don."
test$Title[grep("Dr.", test$Name)] <- "Dr."
test$Title[grep("Major.", test$Name)] <- "Major"
test$Title[grep("Jonkheer", test$Name)] <- "Jonkheer"
test$Title[grep("Col.", test$Name)] <- "Col."
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
set.seed=1
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
summary(train)
is.na(train$Title)
is.na(train$Title)  == TRUE
train$Title[train$Title == NA]
train$Title[grep("Major.", train$Name)] <- "Major."
train$Title[grep("Jonkheer", train$Name)] <- "Jonkheer"
train$Title[grep("Col.", train$Name)] <- "Col."
test$Title[grep("Master.", test$Name)] <- "Master."
test$Title[grep("Miss", test$Name)] <- "Miss."
test$Title[grep("Mr.", test$Name)] <- "Mr."
test$Title[grep("Mrs.", test$Name)] <- "Mrs."
test$Title[grep("Rev.", test$Name)] <- "Rev."
test$Title[grep("Don.", test$Name)] <- "Don."
test$Title[grep("Dr.", test$Name)] <- "Dr."
test$Title[grep("Major.", test$Name)] <- "Major."
test$Title[grep("Jonkheer", test$Name)] <- "Jonkheer"
test$Title[grep("Col.", test$Name)] <- "Col."
test$Title[grep("Major.", test$Name)] <- "Major."
test$Title[grep("Dr.", test$Name)] <- "Dr."
test$Title[grep("Major.", test$Name)] <- "Major."
train$Title[grep("Major.", train$Name)] <- "Major."
train$Title[grep("Jonkheer", train$Name)] <- "Jonkheer"
train$Title[grep("Col.", train$Name)] <- "Col."
test$Title[grep("Master.", test$Name)] <- "Master."
test$Title[grep("Major.", test$Name)]
setwd("c:/emc/cursos/Kaggle")
train <- read.csv("C:/EMC/Cursos/Kaggle/train.csv")
test <- read.csv("C:/EMC/Cursos/Kaggle/test.csv")
str(train)
str(train)
library(rpart)
library(rpart.plot)
library(caTools)
library(ROCR)
library(caret)
library(e1071)
library(randomForest)
library(flexclust)
train$Title <- NA
test$Title <- NA
train$Title[grep("Master.", train$Name)] <- "Master."
train$Title[grep("Miss", train$Name)] <- "Miss."
train$Title[grep("Mr.", train$Name)] <- "Mr."
train$Title[grep("Mrs.", train$Name)] <- "Mrs."
train$Title[grep("Rev.", train$Name)] <- "Rev."
train$Title[grep("Don.", train$Name)] <- "Don."
train$Title[grep("Dr.", train$Name)] <- "Dr."
train$Title[grep("Major.", train$Name)] <- "Major."
train$Title[grep("Jonkheer", train$Name)] <- "Jonkheer"
train$Title[grep("Col.", train$Name)] <- "Col."
test$Title[grep("Master.", test$Name)] <- "Master."
test$Title[grep("Miss", test$Name)] <- "Miss."
test$Title[grep("Mr.", test$Name)] <- "Mr."
test$Title[grep("Mrs.", test$Name)] <- "Mrs."
test$Title[grep("Rev.", test$Name)] <- "Rev."
test$Title[grep("Don.", test$Name)] <- "Don."
test$Title[grep("Dr.", test$Name)] <- "Dr."
test$Title[grep("Major.", test$Name)] <- "Major."
test$Title[grep("Jonkheer", test$Name)] <- "Jonkheer"
test$Title[grep("Col.", test$Name)] <- "Col."
train$Survived <- as.factor(train$Survived)
train$Pclass <- as.factor(train$Pclass)
train$Embarked <- as.character(train$Embarked)
train$Title <- as.factor(train$Title)
test$Survived <- as.factor(test$Survived)
test$Pclass <- as.factor(test$Pclass)
test$Embarked <- as.character(test$Embarked)
test$Survived <- as.factor(test$Survived)
test$Pclass <- as.factor(test$Pclass)
test$Embarked <- as.character(test$Embarked)
test$Title <- as.factor(test$Title)
listacc <- NULL
for (i in (202:202)) {
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (202:202)) {
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (202:202)) {
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (202:202)) {
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (202:202)) {
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (202:202)) {
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (202:202)) {
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (202:202)) {
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (202:202)) {
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (202:202)) {
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (202:202)) {
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (202:202)) {
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (202:202)) {
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
PredTest <- predict(TitanicRF, newdata=test, type="response")
MySubmission <- data.frame(PassengerID = test$PassengerId, Survived = PredTest)
write.csv(MySubmission, "Submission.csv", row.names=FALSE)
train$Title[train$Title == NA]
View(train)
table(train$Title)
table(test$Title)
table(train$Title, train$Survived)
listacc <- NULL
for (i in (202:202)) {
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain, nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
table(train$Title, train#Age)
table(train$Title, train$Age)
table(train$Title, train$Age)
table(train$Age, train$Title)
table(test$Age)
summary(test$Age)
table(train$Title == "Major.")
train[train$Title == "Major"]
train[train$Title == "Major",]
train[train$Title == "Major.",]
train[train$Title == "Master.",]
test$Age[train$Age == NA,]
test$Age[train$Age == NA]
test$Age[train$Age == NA & train$Title == "Master."]
train[train$Title == "Master.",]
test$Age[train$Age == NA & train$Title == "Master."]
test[train$Age == NA & train$Title == "Master.",]
test[is.na(train$Age)  & train$Title == "Master.",]
train[is.na(train$Age)  & train$Title == "Master.",]
summary(test$Age)
train[is.na(train$Age)  & train$Title == "Master.",] <- 27
train[is.na(train$Age)  & train$Title == "Master.", "Age"]
train[is.na(train$Age)  & train$Title == "Master.", 4]
train[is.na(train$Age)  & train$Title == "Master.", 3]
train[is.na(train$Age)  & train$Title == "Master."]
train[is.na(train$Age)  & train$Title == "Master.",]
getwd
getwd()
setwd("C:/EMC/Cursos/GitHub/Practice-With-Titanic")"
setwd("C:/EMC/Cursos/GitHub/Practice-With-Titanic")
setwd("C:/EMC/Cursos/GitHub/Practice-With-Titanic")
getwd()
train <- read.csv("train.csv")
test <- read.csv("test.csv")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
train$Title <- as.factor(train$Title)
```
View(train)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
```
Loading Libraries
```{r}
library(rpart)
library(rpart.plot)
library(caTools)
library(ROCR)
library(caret)
library(e1071)
library(randomForest)
library(flexclust)
```
Formating the Data
```{r}
train$Survived <- as.factor(train$Survived)
train$Pclass <- as.factor(train$Pclass)
train$Embarked <- as.character(train$Embarked)
train$Title <- as.factor(train$Title)
train$Title
View(train)
str(PredTest)
summary(PredTest)
summary(PredTest)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
library(rpart)
library(rpart.plot)
library(caTools)
library(ROCR)
library(caret)
library(e1071)
library(randomForest)
library(flexclust)
train$Survived <- as.factor(train$Survived)
train$Pclass <- as.factor(train$Pclass)
train$Embarked <- as.character(train$Embarked)
#train$Title <- as.factor(train$Title)
test$Pclass <- as.factor(test$Pclass)
test$Embarked <- as.character(test$Embarked)
#test$Title <- as.factor(test$Title)
listacc <- NULL
for (i in (202:202)) {
set.seed=202
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch, data = Titanictrain, nodesize = 50, ntree = 2000)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("set.seed=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
plot(listacc)
max(listacc)
which.max(listacc)
PredTest <- predict(TitanicRF, newdata=test, type="response")
MySubmission <- data.frame(PassengerID = test$PassengerId, Survived = PredTest)
write.csv(MySubmission, "Submission.csv", row.names=FALSE)
summary(PredTest)
summary(TitanicRF)
str(TitanicRF)
TitanicRF
summary(TitanicRF)
knit2html("Titanic.Rmd")
library(knit)
library(knitr)
knit2html("Titanic.Rmd")
