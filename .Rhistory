for (i in (1)) {
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch, data = Titanictrain,
nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("ntree=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (1)) {
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch, data = Titanictrain,
nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("ntree=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
PredTest <- predict(TitanicRF, newdata=test, type="response")
MySubmission <- data.frame(PassengerID = test$PassengerId, Survived = PredTest)
write.csv(MySubmission, "Submission.csv", row.names=FALSE)
train$Title <- NA
test$Title <- NA
train$Title[grep("Master.", train$Name)] <- "Master."
train$Title[grep("Miss", train$Name)] <- "Miss."
train$Title[grep("Mr.", train$Name)] <- "Mr."
train$Title[grep("Mrs.", train$Name)] <- "Mrs."
train$Title[grep("Rev.", train$Name)] <- "Rev."
train$Title[grep("Don.", train$Name)] <- "Don."
train$Title[grep("Dr.", train$Name)] <- "Dr."
train$Title[grep("Major.", train$Name)] <- "Major."
train$Title[grep("Jonkheer", train$Name)] <- "Jonkheer"
train$Title[grep("Col.", train$Name)] <- "Col."
test$Title[grep("Master.", test$Name)] <- "Master."
test$Title[grep("Miss", test$Name)] <- "Miss."
test$Title[grep("Mr.", test$Name)] <- "Mr."
test$Title[grep("Mrs.", test$Name)] <- "Mrs."
test$Title[grep("Rev.", test$Name)] <- "Rev."
test$Title[grep("Don.", test$Name)] <- "Don."
test$Title[grep("Dr.", test$Name)] <- "Dr."
test$Title[grep("Major.", test$Name)] <- "Major."
test$Title[grep("Jonkheer", test$Name)] <- "Jonkheer"
test$Title[grep("Col.", test$Name)] <- "Col."
table(train$Title, train$Survived)
table(test$Title)
table(train$Age, train$Title)
summary(test$Age)
table(train$Title == "Major.")
train[train$Title == "Master.",]
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
listacc <- NULL
for (i in (1)) {
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain,
nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("ntree=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (1)) {
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain,
nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("ntree=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
table(train$Title)
str(train)
summary(train)
View(test)
View(test)
train[train$Title == NA,]
train[train$Title == "Col.",]
test[grep("Col.", test$Name)]
train[grep("Col.", test$Name)]
train[grep("Col.", test$Name),m]
train[grep("Col.", test$Name),]
train[grep("Col.", train$Name),]
train[grep("Col.", train$Name, fixed = TRUE),]
train$Title <- NA
test$Title <- NA
train$Title[grep("Master.", train$Name, fixed = TRUE)] <- "Master."
train$Title[grep("Miss", train$Name, fixed = TRUE)] <- "Miss."
train$Title[grep("Mr.", train$Name, fixed = TRUE)] <- "Mr."
train$Title[grep("Mrs.", train$Name, fixed = TRUE)] <- "Mrs."
train$Title[grep("Rev.", train$Name, fixed = TRUE)] <- "Rev."
train$Title[grep("Don.", train$Name, fixed = TRUE)] <- "Don."
train$Title[grep("Dr.", train$Name, fixed = TRUE)] <- "Dr."
train$Title[grep("Major.", train$Name, fixed = TRUE)] <- "Major."
train$Title[grep("Jonkheer", train$Name, fixed = TRUE)] <- "Jonkheer"
train$Title[grep("Col.", train$Name, fixed = TRUE)] <- "Col."
test$Title[grep("Master.", test$Name, fixed = TRUE)] <- "Master."
test$Title[grep("Miss", test$Name, fixed = TRUE)] <- "Miss."
test$Title[grep("Mr.", test$Name, fixed = TRUE)] <- "Mr."
test$Title[grep("Mrs.", test$Name, fixed = TRUE)] <- "Mrs."
test$Title[grep("Rev.", test$Name, fixed = TRUE)] <- "Rev."
test$Title[grep("Don.", test$Name, fixed = TRUE)] <- "Don."
test$Title[grep("Dr.", test$Name, fixed = TRUE)] <- "Dr."
test$Title[grep("Major.", test$Name, fixed = TRUE)] <- "Major."
test$Title[grep("Jonkheer", test$Name, fixed = TRUE)] <- "Jonkheer"
test$Title[grep("Col.", test$Name, fixed = TRUE)] <- "Col."
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
train[train$Title == "Col.",]
summary(train)
train[grep("Col.", train$Name, fixed = TRUE),]
train[train$Title == NA,]
train$Title
train[is.na(train$Title),]
train$Title <- NA
test$Title <- NA
train$Title[grep("Master.", train$Name, fixed = TRUE)] <- "Master."
train$Title[grep("Miss", train$Name, fixed = TRUE)] <- "Miss."
train$Title[grep("Mr.", train$Name, fixed = TRUE)] <- "Mr."
train$Title[grep("Mrs.", train$Name, fixed = TRUE)] <- "Mrs."
train$Title[grep("Rev.", train$Name, fixed = TRUE)] <- "Rev."
train$Title[grep("Don.", train$Name, fixed = TRUE)] <- "Don."
train$Title[grep("Dr.", train$Name, fixed = TRUE)] <- "Dr."
train$Title[grep("Major.", train$Name, fixed = TRUE)] <- "Major."
train$Title[grep("Jonkheer", train$Name, fixed = TRUE)] <- "Jonkheer"
train$Title[grep("Col.", train$Name, fixed = TRUE)] <- "Col."
train$Title[grep("Mme..", train$Name, fixed = TRUE)] <- "Mme."
train$Title[grep("Ms.", train$Name, fixed = TRUE)] <- "Ms."
train$Title[grep("Lady.", train$Name, fixed = TRUE)] <- "Lady."
train$Title[grep("Sir.", train$Name, fixed = TRUE)] <- "Sir.."
train$Title[grep("Mlle.", train$Name, fixed = TRUE)] <- "Mlle."
train$Title[grep("Capt.", train$Name, fixed = TRUE)] <- "Capt."
train$Title[grep("the Countess.", train$Name, fixed = TRUE)] <- "the Countess."
test$Title[grep("Master.", test$Name, fixed = TRUE)] <- "Master."
test$Title[grep("Miss", test$Name, fixed = TRUE)] <- "Miss."
test$Title[grep("Mr.", test$Name, fixed = TRUE)] <- "Mr."
test$Title[grep("Mrs.", test$Name, fixed = TRUE)] <- "Mrs."
test$Title[grep("Rev.", test$Name, fixed = TRUE)] <- "Rev."
test$Title[grep("Don.", test$Name, fixed = TRUE)] <- "Don."
test$Title[grep("Dr.", test$Name, fixed = TRUE)] <- "Dr."
test$Title[grep("Major.", test$Name, fixed = TRUE)] <- "Major."
test$Title[grep("Jonkheer", test$Name, fixed = TRUE)] <- "Jonkheer"
test$Title[grep("Col.", test$Name, fixed = TRUE)] <- "Col."
test$Title[grep("Mme..", test$Name, fixed = TRUE)] <- "Mme."
test$Title[grep("Ms.", test$Name, fixed = TRUE)] <- "Ms."
test$Title[grep("Lady.", test$Name, fixed = TRUE)] <- "Lady."
test$Title[grep("Sir.", test$Name, fixed = TRUE)] <- "Sir.."
test$Title[grep("Mlle.", test$Name, fixed = TRUE)] <- "Mlle."
test$Title[grep("Capt.", test$Name, fixed = TRUE)] <- "Capt."
test$Title[grep("the Countess.", test$Name, fixed = TRUE)] <- "the Countess."
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
summary(train)
train[is.na(train$Title),]
train$Title[grep("Mme.", train$Name, fixed = TRUE)] <- "Mme."
train$Title <- NA
test$Title <- NA
train$Title[grep("Master.", train$Name, fixed = TRUE)] <- "Master."
train$Title[grep("Miss", train$Name, fixed = TRUE)] <- "Miss."
train$Title[grep("Mr.", train$Name, fixed = TRUE)] <- "Mr."
train$Title[grep("Mrs.", train$Name, fixed = TRUE)] <- "Mrs."
train$Title[grep("Rev.", train$Name, fixed = TRUE)] <- "Rev."
train$Title[grep("Don.", train$Name, fixed = TRUE)] <- "Don."
train$Title[grep("Dr.", train$Name, fixed = TRUE)] <- "Dr."
train$Title[grep("Major.", train$Name, fixed = TRUE)] <- "Major."
train$Title[grep("Jonkheer", train$Name, fixed = TRUE)] <- "Jonkheer"
train$Title[grep("Col.", train$Name, fixed = TRUE)] <- "Col."
train$Title[grep("Mme.", train$Name, fixed = TRUE)] <- "Mme."
train$Title[grep("Ms.", train$Name, fixed = TRUE)] <- "Ms."
train$Title[grep("Lady.", train$Name, fixed = TRUE)] <- "Lady."
train$Title[grep("Sir.", train$Name, fixed = TRUE)] <- "Sir.."
train$Title[grep("Mlle.", train$Name, fixed = TRUE)] <- "Mlle."
train$Title[grep("Capt.", train$Name, fixed = TRUE)] <- "Capt."
train$Title[grep("the Countess.", train$Name, fixed = TRUE)] <- "the Countess."
test$Title[grep("Master.", test$Name, fixed = TRUE)] <- "Master."
test$Title[grep("Miss", test$Name, fixed = TRUE)] <- "Miss."
test$Title[grep("Mr.", test$Name, fixed = TRUE)] <- "Mr."
test$Title[grep("Mrs.", test$Name, fixed = TRUE)] <- "Mrs."
test$Title[grep("Rev.", test$Name, fixed = TRUE)] <- "Rev."
test$Title[grep("Don.", test$Name, fixed = TRUE)] <- "Don."
test$Title[grep("Dr.", test$Name, fixed = TRUE)] <- "Dr."
test$Title[grep("Major.", test$Name, fixed = TRUE)] <- "Major."
test$Title[grep("Jonkheer", test$Name, fixed = TRUE)] <- "Jonkheer"
test$Title[grep("Col.", test$Name, fixed = TRUE)] <- "Col."
test$Title[grep("Mme..", test$Name, fixed = TRUE)] <- "Mme."
test$Title[grep("Ms.", test$Name, fixed = TRUE)] <- "Ms."
test$Title[grep("Lady.", test$Name, fixed = TRUE)] <- "Lady."
test$Title[grep("Sir.", test$Name, fixed = TRUE)] <- "Sir.."
test$Title[grep("Mlle.", test$Name, fixed = TRUE)] <- "Mlle."
test$Title[grep("Capt.", test$Name, fixed = TRUE)] <- "Capt."
test$Title[grep("the Countess.", test$Name, fixed = TRUE)] <- "the Countess."
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
summary(train)
listacc <- NULL
for (i in (1)) {
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain,
nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("ntree=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (1)) {
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain,
nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("ntree=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
listacc <- NULL
for (i in (1)) {
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain,
nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("ntree=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
PredTest <- predict(TitanicRF, newdata=test, type="response")
MySubmission <- data.frame(PassengerID = test$PassengerId, Survived = PredTest)
write.csv(MySubmission, "Submission.csv", row.names=FALSE)
summary(train)
summary(test)
test[is.na(test$Title),]
train$Title <- NA
test$Title <- NA
train$Title[grep("Master.", train$Name, fixed = TRUE)] <- "Master."
train$Title[grep("Miss", train$Name, fixed = TRUE)] <- "Miss."
train$Title[grep("Mr.", train$Name, fixed = TRUE)] <- "Mr."
train$Title[grep("Mrs.", train$Name, fixed = TRUE)] <- "Mrs."
train$Title[grep("Rev.", train$Name, fixed = TRUE)] <- "Rev."
train$Title[grep("Don.", train$Name, fixed = TRUE)] <- "Don."
train$Title[grep("Dr.", train$Name, fixed = TRUE)] <- "Dr."
train$Title[grep("Major.", train$Name, fixed = TRUE)] <- "Major."
train$Title[grep("Jonkheer", train$Name, fixed = TRUE)] <- "Jonkheer"
train$Title[grep("Col.", train$Name, fixed = TRUE)] <- "Col."
train$Title[grep("Mme.", train$Name, fixed = TRUE)] <- "Mme."
train$Title[grep("Ms.", train$Name, fixed = TRUE)] <- "Ms."
train$Title[grep("Lady.", train$Name, fixed = TRUE)] <- "Lady."
train$Title[grep("Sir.", train$Name, fixed = TRUE)] <- "Sir.."
train$Title[grep("Mlle.", train$Name, fixed = TRUE)] <- "Mlle."
train$Title[grep("Capt.", train$Name, fixed = TRUE)] <- "Capt."
train$Title[grep("the Countess.", train$Name, fixed = TRUE)] <- "the Countess."
train$Title[grep("Dona.", train$Name, fixed = TRUE)] <- "Dona."
test$Title[grep("Master.", test$Name, fixed = TRUE)] <- "Master."
test$Title[grep("Miss", test$Name, fixed = TRUE)] <- "Miss."
test$Title[grep("Mr.", test$Name, fixed = TRUE)] <- "Mr."
test$Title[grep("Mrs.", test$Name, fixed = TRUE)] <- "Mrs."
test$Title[grep("Rev.", test$Name, fixed = TRUE)] <- "Rev."
test$Title[grep("Don.", test$Name, fixed = TRUE)] <- "Don."
test$Title[grep("Dr.", test$Name, fixed = TRUE)] <- "Dr."
test$Title[grep("Major.", test$Name, fixed = TRUE)] <- "Major."
test$Title[grep("Jonkheer", test$Name, fixed = TRUE)] <- "Jonkheer"
test$Title[grep("Col.", test$Name, fixed = TRUE)] <- "Col."
test$Title[grep("Mme..", test$Name, fixed = TRUE)] <- "Mme."
test$Title[grep("Ms.", test$Name, fixed = TRUE)] <- "Ms."
test$Title[grep("Lady.", test$Name, fixed = TRUE)] <- "Lady."
test$Title[grep("Sir.", test$Name, fixed = TRUE)] <- "Sir.."
test$Title[grep("Mlle.", test$Name, fixed = TRUE)] <- "Mlle."
test$Title[grep("Capt.", test$Name, fixed = TRUE)] <- "Capt."
test$Title[grep("the Countess.", test$Name, fixed = TRUE)] <- "the Countess."
test$Title[grep("Dona.", test$Name, fixed = TRUE)] <- "Dona."
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
summary(train)
summary(test)
listacc <- NULL
for (i in (1)) {
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain,
nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("ntree=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
PredTest <- predict(TitanicRF, newdata=test, type="response")
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
summary(train)
str(train)
str(test)
View(test)
PredTest <- predict(TitanicRF, newdata=test, type="response")
test[test$Title == "Dona.", ] <- NA
summary(test)
test <- read.csv("test.csv")
test$Pclass <- as.factor(test$Pclass)
test$Embarked <- as.character(test$Embarked)
test$Title <- NA
test$Title[grep("Master.", test$Name, fixed = TRUE)] <- "Master."
test$Title[grep("Miss", test$Name, fixed = TRUE)] <- "Miss."
test$Title[grep("Mr.", test$Name, fixed = TRUE)] <- "Mr."
test$Title[grep("Mrs.", test$Name, fixed = TRUE)] <- "Mrs."
test$Title[grep("Rev.", test$Name, fixed = TRUE)] <- "Rev."
test$Title[grep("Don.", test$Name, fixed = TRUE)] <- "Don."
test$Title[grep("Dr.", test$Name, fixed = TRUE)] <- "Dr."
test$Title[grep("Major.", test$Name, fixed = TRUE)] <- "Major."
test$Title[grep("Jonkheer", test$Name, fixed = TRUE)] <- "Jonkheer"
test$Title[grep("Col.", test$Name, fixed = TRUE)] <- "Col."
test$Title[grep("Mme..", test$Name, fixed = TRUE)] <- "Mme."
test$Title[grep("Ms.", test$Name, fixed = TRUE)] <- "Ms."
test$Title[grep("Lady.", test$Name, fixed = TRUE)] <- "Lady."
test$Title[grep("Sir.", test$Name, fixed = TRUE)] <- "Sir.."
test$Title[grep("Mlle.", test$Name, fixed = TRUE)] <- "Mlle."
test$Title[grep("Capt.", test$Name, fixed = TRUE)] <- "Capt."
test$Title[grep("the Countess.", test$Name, fixed = TRUE)] <- "the Countess."
test$Title[grep("Dona.", test$Name, fixed = TRUE)] <- "Dona."
test <- test[-(test$Title == "Dona."), ]
listacc <- NULL
for (i in (1)) {
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain,
nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("ntree=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
PredTest <- predict(TitanicRF, newdata=test, type="response")
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
listacc <- NULL
for (i in (1)) {
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain,
nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("ntree=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
PredTest <- predict(TitanicRF, newdata=test, type="response")
table(train$Title)
table(test$Title)
test <- test[-c(test$Title == "Dona."), ]
table(test$Title)
test$Title == "Dona."
which(test$Title == "Dona.")
test[413,]
test <- test[-c(which(test$Title == "Dona.")), ]
table(test$Title)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
train$Survived <- as.factor(train$Survived)
train$Pclass <- as.factor(train$Pclass)
train$Embarked <- as.character(train$Embarked)
test$Pclass <- as.factor(test$Pclass)
test$Embarked <- as.character(test$Embarked)
train$Title <- NA
test$Title <- NA
train$Title[grep("Master.", train$Name, fixed = TRUE)] <- "Master."
train$Title[grep("Miss", train$Name, fixed = TRUE)] <- "Miss."
train$Title[grep("Mr.", train$Name, fixed = TRUE)] <- "Mr."
train$Title[grep("Mrs.", train$Name, fixed = TRUE)] <- "Mrs."
train$Title[grep("Rev.", train$Name, fixed = TRUE)] <- "Rev."
train$Title[grep("Don.", train$Name, fixed = TRUE)] <- "Don."
train$Title[grep("Dr.", train$Name, fixed = TRUE)] <- "Dr."
train$Title[grep("Major.", train$Name, fixed = TRUE)] <- "Major."
train$Title[grep("Jonkheer", train$Name, fixed = TRUE)] <- "Jonkheer"
train$Title[grep("Col.", train$Name, fixed = TRUE)] <- "Col."
train$Title[grep("Mme.", train$Name, fixed = TRUE)] <- "Mme."
train$Title[grep("Ms.", train$Name, fixed = TRUE)] <- "Ms."
train$Title[grep("Lady.", train$Name, fixed = TRUE)] <- "Lady."
train$Title[grep("Sir.", train$Name, fixed = TRUE)] <- "Sir.."
train$Title[grep("Mlle.", train$Name, fixed = TRUE)] <- "Mlle."
train$Title[grep("Capt.", train$Name, fixed = TRUE)] <- "Capt."
train$Title[grep("the Countess.", train$Name, fixed = TRUE)] <- "the Countess."
train$Title[grep("Dona.", train$Name, fixed = TRUE)] <- "Dona."
test$Title[grep("Master.", test$Name, fixed = TRUE)] <- "Master."
test$Title[grep("Miss", test$Name, fixed = TRUE)] <- "Miss."
test$Title[grep("Mr.", test$Name, fixed = TRUE)] <- "Mr."
test$Title[grep("Mrs.", test$Name, fixed = TRUE)] <- "Mrs."
test$Title[grep("Rev.", test$Name, fixed = TRUE)] <- "Rev."
test$Title[grep("Don.", test$Name, fixed = TRUE)] <- "Don."
test$Title[grep("Dr.", test$Name, fixed = TRUE)] <- "Dr."
test$Title[grep("Major.", test$Name, fixed = TRUE)] <- "Major."
test$Title[grep("Jonkheer", test$Name, fixed = TRUE)] <- "Jonkheer"
test$Title[grep("Col.", test$Name, fixed = TRUE)] <- "Col."
test$Title[grep("Mme..", test$Name, fixed = TRUE)] <- "Mme."
test$Title[grep("Ms.", test$Name, fixed = TRUE)] <- "Ms."
test$Title[grep("Lady.", test$Name, fixed = TRUE)] <- "Lady."
test$Title[grep("Sir.", test$Name, fixed = TRUE)] <- "Sir.."
test$Title[grep("Mlle.", test$Name, fixed = TRUE)] <- "Mlle."
test$Title[grep("Capt.", test$Name, fixed = TRUE)] <- "Capt."
test$Title[grep("the Countess.", test$Name, fixed = TRUE)] <- "the Countess."
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
listacc <- NULL
for (i in (1)) {
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain,
nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("ntree=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
PredTest <- predict(TitanicRF, newdata=test, type="response")
which(test$Title == "NA")
summary(test)
is.na(test$Title)
which(is.na(test$Title))
test <- test[-c(which(is.na(test$Title))), ]
which(is.na(test$Title))
summary(test)
train$Title <- as.factor(train$Title)
test$Title <- as.factor(test$Title)
listacc <- NULL
for (i in (1)) {
set.seed(2444)
split <- sample.split(train$Survived, SplitRatio = 0.7)
Titanictrain <- subset(train, split == TRUE)
Titanictest <- subset(train, split == FALSE)
TitanicRF <- randomForest(Survived ~ Pclass + Sex + SibSp + Parch + Title, data = Titanictrain,
nodesize = 50, ntree = 2444)
PredictRF <- predict(TitanicRF, newdata = Titanictest)
tabla <- table(Titanictest$Survived, PredictRF)
acc <- (tabla[1,1] + tabla[2,2])/nrow(Titanictest)
#cat("ntree=",i," acc=",acc,"\n")
listacc[i] <- acc
if (i %% 100 == 0) { cat(i)}
}
acc
tabla
PredTest <- predict(TitanicRF, newdata=test, type="response")
table(train$Title)
table(test$Title)
